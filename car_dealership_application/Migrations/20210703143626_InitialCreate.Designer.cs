// <auto-generated />
using CarDealershipWebApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CarDealershipWebApp.Migrations
{
    [DbContext(typeof(CarDealershipContext))]
    [Migration("20210703143626_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CarDealershipWebApp.Models.Car", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AspirationStr")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Aspiration");

                    b.Property<string>("AssembledStr")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Assembled");

                    b.Property<int>("CarModelID")
                        .HasColumnType("int");

                    b.Property<string>("Colour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DirectInjectionStr")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DirectInjection");

                    b.Property<int>("Doors")
                        .HasColumnType("int");

                    b.Property<double>("EngineCC")
                        .HasColumnType("float");

                    b.Property<string>("FuelTypeStr")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FuelType");

                    b.Property<double>("HeightMM")
                        .HasColumnType("float");

                    b.Property<double>("LengthMM")
                        .HasColumnType("float");

                    b.Property<int>("ManufactureYear")
                        .HasColumnType("int");

                    b.Property<double>("Mileage")
                        .HasColumnType("float");

                    b.Property<double>("PeakPowerHP")
                        .HasColumnType("float");

                    b.Property<double>("PeakTorqueNM")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("PricePerMonth")
                        .HasColumnType("float");

                    b.Property<int>("SeatCapacity")
                        .HasColumnType("int");

                    b.Property<string>("SteeringTypeStr")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SteeringType");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransmissionStr")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Transmission");

                    b.Property<double>("WheelBaseMM")
                        .HasColumnType("float");

                    b.Property<double>("WidthMM")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.HasIndex("CarModelID");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("CarDealershipWebApp.Models.CarBrand", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("CarBrands");
                });

            modelBuilder.Entity("CarDealershipWebApp.Models.CarModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarBrandID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CarBrandID");

                    b.ToTable("CarModels");
                });

            modelBuilder.Entity("CarDealershipWebApp.Models.Car", b =>
                {
                    b.HasOne("CarDealershipWebApp.Models.CarModel", "CarModel")
                        .WithMany("Cars")
                        .HasForeignKey("CarModelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarModel");
                });

            modelBuilder.Entity("CarDealershipWebApp.Models.CarModel", b =>
                {
                    b.HasOne("CarDealershipWebApp.Models.CarBrand", "CarBrand")
                        .WithMany("CarModels")
                        .HasForeignKey("CarBrandID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarBrand");
                });

            modelBuilder.Entity("CarDealershipWebApp.Models.CarBrand", b =>
                {
                    b.Navigation("CarModels");
                });

            modelBuilder.Entity("CarDealershipWebApp.Models.CarModel", b =>
                {
                    b.Navigation("Cars");
                });
#pragma warning restore 612, 618
        }
    }
}
